import { Datastore } from './datastore';
import { AuthorizedHttpClient } from '../utils/api-request';
import { ICatalystTable, ICatalystColumn, ICatalystRow, ParsableComponent } from '../utils/pojo/common';
declare type ICatalystRowInput = {
    [column_name: string]: any;
    ROWID?: string | number;
};
export declare class Table implements ParsableComponent<ICatalystTable> {
    _tableDetails: ICatalystTable;
    identifier: string;
    requester: AuthorizedHttpClient;
    constructor(datastoreInstance: Datastore, tableDetails: ICatalystTable);
    getComponentName(): string;
    getColumnDetails(id: string | number): Promise<ICatalystColumn>;
    getAllColumns(): Promise<Array<ICatalystColumn>>;
    insertRow(row: ICatalystRowInput): Promise<ICatalystRow>;
    insertRows(rowArr: Array<ICatalystRowInput>): Promise<Array<ICatalystRow>>;
    getAllRows(): Promise<Array<ICatalystRow>>;
    getRow(id: string | number): Promise<ICatalystRow>;
    deleteRow(id: string | number): Promise<boolean>;
    deleteRows(ids: Array<string | number>): Promise<boolean>;
    updateRows(rows: Array<ICatalystRowInput & {
        ROWID: string | number;
    }>): Promise<Array<ICatalystRow>>;
    updateRow(row: ICatalystRowInput & {
        ROWID: string | number;
    }): Promise<ICatalystRow>;
    toString(): string;
    toJSON(): ICatalystTable;
}
export {};
